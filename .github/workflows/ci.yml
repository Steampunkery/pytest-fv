name: CI
on:
  - push
  - pull_request
  - workflow_dispatch

jobs:
  doc:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.1
    - name: Build
      run: |
        python3 -m pip install packaging sphinx cairosvg sphinx-argparse
        python3 -m pip install sphinx-rtd-theme
        cd doc
        make html
        touch build/html/.nojekyll
    - name: Deploy
      if: startsWith(github.ref, 'refs/heads/main')
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages # The branch the action should deploy to.
        folder: doc/build/html # The folder the action should deploy.
  linux:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: Fetch source dependencies
      env:
        IVPM_PYTHON: python3
        BUILD_NUM: ${{ github.run_id }}
      run: |
        echo "BUILD_NUM=${BUILD_NUM}" >> python/pytest_fv/__build_num__.py
        ${IVPM_PYTHON} -m pip install ivpm 
        ${IVPM_PYTHON} -m ivpm update -a
    - name: Build packages
      env:
        IVPM_PYTHON: ./packages/python/bin/python
      run: |
        ${IVPM_PYTHON} -m pip install twine
        ${IVPM_PYTHON} setup.py bdist_wheel --universal
    - name: Publish to PyPi
      if: startsWith(github.ref, 'refs/heads/main')
      env:
        IVPM_PYTHON: ./packages/python/bin/python
        BUILD_NUM: ${{ github.run_id }}
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        ${IVPM_PYTHON} -m twine upload dist/*.whl          

#   macos:
#     runs-on: macos-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Fetch dependencies
#         run: |
#           python3 --version
#           python3 -m pip install ivpm
#           python3 -m ivpm update -a
#           ./packages/python/bin/python3 -m pip install cython setuptools wheel build twine
#       - name: Build wheel
#         env:
#           BUILD_NUM: ${{ github.run_id }}
#         run: |
#           echo "BUILD_NUM=${BUILD_NUM}" >> python/pytest_fv/__build_num__.py
#           ./packages/python/bin/python3 setup.py bdist_wheel
#       - name: Publish to PyPi
#         if: startsWith(github.ref, 'refs/heads/main')
#         env:
#           TWINE_USERNAME: __token__
#           TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
#         run: |
#           ./packages/python/bin/python3 -m twine  upload dist/*.whl

#   windows:
#     runs-on: ${{ matrix.platform }}
#     strategy:
#       matrix:
#         include:
#         - platform: windows-latest
#           build_arch: x64
#           python_arch: x64
#           spec: '3.8'
#         - platform: windows-latest
#           build_arch: x64
#           python_arch: x64
#           spec: '3.9'
#         - platform: windows-latest
#           build_arch: x64
#           python_arch: x64
#           spec: '3.10'
#         - platform: windows-latest
#           build_arch: x64
#           python_arch: x64
#           spec: '3.11'
#     steps:
#     - name: checkout
#       uses: actions/checkout@v2

#     - name: Install python ${{ matrix.spec }}
#       uses: actions/setup-python@v2
#       with:
#         architecture: ${{ matrix.python_arch }}
#         python-version: ${{ matrix.spec }}
#     - uses: ilammy/msvc-dev-cmd@v1.13.0
#       with:
#         arch: ${{ matrix.build_arch }}

#     - name: Build/Test Package
#       env:
#         BUILD_NUM: ${{ github.run_id }}
#       run: |
#         python -m pip install ivpm
#         python -m ivpm update -a
#         ./packages/python/Scripts/python -m pip install ninja cython setuptools wheel build twine
#         echo "BUILD_NUM=$env:BUILD_NUM" > python/hdl_pi_if/__build_num__.py
#         ./packages/python/Scripts/python setup.py build bdist_wheel
#         ls dist

#     - name: Publish to PyPi
#       if: startsWith(github.ref, 'refs/heads/main')
#       env:
#         TWINE_USERNAME: __token__
#         TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
#       shell: bash
#       run: |
#           ./packages/python/Scripts/python -m twine upload dist/*.whl

